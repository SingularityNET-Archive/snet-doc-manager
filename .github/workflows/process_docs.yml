name: Process Documents

on:
  workflow_dispatch:
  schedule:
    - cron: '10 0 * * *' # Runs every day at midnight

jobs:
  process_docs:
    runs-on: ubuntu-latest
    env:
      NETLIFY_FUNCTION_URL: ${{ secrets.NETLIFY_FUNCTION_URL }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Fetch documents
        id: fetch_docs
        uses: actions/http-client@v1
        with:
          url: ${{ env.NETLIFY_FUNCTION_URL }}/getAllDocs
          method: GET

      - name: Process documents in batches
        env:
          DOCS: ${{ steps.fetch_docs.outputs.data }}
        run: |
          echo "Fetched documents: $DOCS"

          # Break documents into batches
          batch_size=1
          batches=$(echo "$DOCS" | jq -c --argjson bs "$batch_size" 'range(0; length; $bs) as $i | .[$i:$i+$bs]')

          # Process each batch
          while IFS= read -r batch; do
            # Call checkStatusChanges Netlify function
            statusChangeResponse=$(curl -s -X POST -H "Content-Type: application/json" -d "{\"docs\": $batch, \"test\": false}" "${NETLIFY_FUNCTION_URL}/checkStatusChanges" | jq -r '.')

            # Call checkRecentChanges Netlify function
            recentChangesResponse=$(curl -s -X POST -H "Content-Type: application/json" -d "{\"docs\": $batch}" "${NETLIFY_FUNCTION_URL}/checkRecentChanges" | jq -r '.')

            # Call getDocComments Netlify function
            commentsResponse=$(curl -s -X POST -H "Content-Type: application/json" -d "{\"docs\": $batch, \"test\": false}" "${NETLIFY_FUNCTION_URL}/getDocComments" | jq -r '.')

            echo "Processed results for batch: {\"statusChangeResponse\": $statusChangeResponse, \"recentChangesResponse\": $recentChangesResponse, \"commentsResponse\": $commentsResponse}"

            # Process status changes
            if [ -n "$statusChangeResponse" ] && [ "$statusChangeResponse" != "[]" ]; then
              # Delete last copy from Google Drive for changed docs
              for changedDocId in $(echo "$statusChangeResponse" | jq -r '.[]'); do
                changedDoc=$(echo "$batch" | jq -r --arg id "$changedDocId" 'map(select(.google_id == $id)) | .[0]')
                if [ -n "$changedDoc" ]; then
                  lastCopyId=$(echo "$changedDoc" | jq -r '.all_copy_ids[-1]')
                  if [ -n "$lastCopyId" ]; then
                    curl -s -X POST -H "Content-Type: application/json" -d "{\"fileId\": \"$lastCopyId\"}" "${NETLIFY_FUNCTION_URL}/deleteFileFromDrive"
                  fi
                fi
              done

              # Call copyChangedDocs Netlify function
              curl -s -X POST -H "Content-Type: application/json" -d "{\"docs\": $batch, \"statusChangeResponse\": $statusChangeResponse, \"test\": false}" "${NETLIFY_FUNCTION_URL}/copyChangedDocs"

              # Call getDocText Netlify function
              curl -s -X POST -H "Content-Type: application/json" -d "{\"docs\": $batch, \"statusChangeResponse\": $statusChangeResponse, \"test\": false}" "${NETLIFY_FUNCTION_URL}/getDocText"
            fi

            # Call commitNonExistingDocs Netlify function
            curl -s -X POST -H "Content-Type: application/json" -d "{\"docs\": $batch, \"test\": false}" "${NETLIFY_FUNCTION_URL}/commitNonExistingDocs"

            # Call commitNonExistingComments Netlify function
            curl -s -X POST -H "Content-Type: application/json" -d "{\"docs\": $batch, \"test\": false}" "${NETLIFY_FUNCTION_URL}/commitNonExistingComments"

            # Call commitNonExistingDocsWithComments Netlify function
            curl -s -X POST -H "Content-Type: application/json" -d "{\"docs\": $batch, \"test\": false}" "${NETLIFY_FUNCTION_URL}/commitNonExistingDocsWithComments"

            # Process recent changes
            if [ -n "$recentChangesResponse" ] && [ "$recentChangesResponse" != "[]" ]; then
              # Call getDocBodyAndCommitToGitHub Netlify function
              curl -s -X POST -H "Content-Type: application/json" -d "{\"docs\": $batch, \"recentChangesResponse\": $recentChangesResponse, \"test\": false}" "${NETLIFY_FUNCTION_URL}/getDocBodyAndCommitToGitHub"

              # Call getDocCommentsAndCommitToGitHub Netlify function
              curl -s -X POST -H "Content-Type: application/json" -d "{\"docs\": $batch, \"recentChangesResponse\": $recentChangesResponse, \"test\": false}" "${NETLIFY_FUNCTION_URL}/getDocCommentsAndCommitToGitHub"

              # Call getDocBodyAndCommentsAndCommitToGitHub Netlify function
              curl -s -X POST -H "Content-Type: application/json" -d "{\"docs\": $batch, \"recentChangesResponse\": $recentChangesResponse, \"test\": false}" "${NETLIFY_FUNCTION_URL}/getDocBodyAndCommentsAndCommitToGitHub"
            fi
          done <<< "$batches"
